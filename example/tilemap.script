----------------------------------------------------------------------
-- LICENSE
----------------------------------------------------------------------

-- MIT License

-- Copyright (c) 2021 Klayton Kowalski

-- Permission is hereby granted, free of charge, to any person obtaining a copy
-- of this software and associated documentation files (the "Software"), to deal
-- in the Software without restriction, including without limitation the rights
-- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-- copies of the Software, and to permit persons to whom the Software is
-- furnished to do so, subject to the following conditions:

-- The above copyright notice and this permission notice shall be included in all
-- copies or substantial portions of the Software.

-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-- SOFTWARE.

-- https://github.com/klaytonkowalski/example-a-star

----------------------------------------------------------------------
-- CONSTANTS
----------------------------------------------------------------------

local grid_start_x = 4
local grid_start_y = 4
local grid_width = 37
local grid_height = 19

local acquire_input_focus = hash("acquire_input_focus")
local input_enter = hash("input_enter")
local input_space = hash("input_space")
local input_button_left = hash("input_button_left")
local input_button_right = hash("input_button_right")
local layer_1 = hash("layer_1")

local tilemap_url = msg.url("main", "/tilemap", "tilemap")

local tile_white = 8
local tile_red = 16
local tile_green = 24
local tile_yellow = 40

----------------------------------------------------------------------
-- PROPERTIES
----------------------------------------------------------------------

local grid
local start_x = 0
local start_y = 0
local end_x = 0
local end_y = 0

----------------------------------------------------------------------
-- FUNCTIONS
----------------------------------------------------------------------

local function a_star()
	
end

function clear_tilemap()
	for i = grid_start_y, grid_height do
		for j = grid_start_x, grid_width do
			tilemap.set_tile(tilemap_url, layer_1, j, i, tile_white)
		end
	end
end

function init(self)
	msg.post("#", acquire_input_focus)
	math.randomseed(socket.gettime() * 1000)
end

function on_input(self, action_id, action)
	if action.pressed then
		if action_id == input_enter then
			
		elseif action_id == input_space then
			clear_tilemap()
			start_x = 0
			start_y = 0
			end_x = 0
			end_y = 0
		elseif action_id == input_button_left then
			local tile_x = math.floor(action.screen_x / 8 / 4) + 1
			local tile_y = math.floor((action.screen_y - 20) / 8 / 4) + 1
			local tile_id = tilemap.get_tile(tilemap_url, layer_1, tile_x, tile_y)
			if tile_id == tile_white then
				tilemap.set_tile(tilemap_url, layer_1, tile_x, tile_y, tile_yellow)
			elseif tile_id == tile_yellow then
				tilemap.set_tile(tilemap_url, layer_1, tile_x, tile_y, tile_white)
			end
		elseif action_id == input_button_right then
			local tile_x = math.floor(action.screen_x / 8 / 4) + 1
			local tile_y = math.floor((action.screen_y - 20) / 8 / 4) + 1
			local tile_id = tilemap.get_tile(tilemap_url, layer_1, tile_x, tile_y)
			if tile_id == tile_white then
				if start_x == 0 then
					tilemap.set_tile(tilemap_url, layer_1, tile_x, tile_y, tile_green)
					start_x = tile_x
					start_y = tile_y
				elseif end_x == 0 then
					tilemap.set_tile(tilemap_url, layer_1, tile_x, tile_y, tile_red)
					end_x = tile_x
					end_y = tile_y
				else
					tilemap.set_tile(tilemap_url, layer_1, end_x, end_y, tile_white)
					tilemap.set_tile(tilemap_url, layer_1, tile_x, tile_y, tile_red)
					end_x = tile_x
					end_y = tile_y
				end
			elseif tile_id == tile_green then
				tilemap.set_tile(tilemap_url, layer_1, tile_x, tile_y, tile_white)
				if end_x ~= 0 then
					tilemap.set_tile(tilemap_url, layer_1, end_x, end_y, tile_green)
					start_x = end_x
					start_y = end_y
					end_x = 0
					end_y = 0
				else
					start_x = 0
					start_y = 0
				end
			elseif tile_id == tile_red then
				tilemap.set_tile(tilemap_url, layer_1, tile_x, tile_y, tile_white)
				end_x = 0
				end_y = 0
			end
		end
	end
end